"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./hooks/usePresaleProgram.ts":
/*!************************************!*\
  !*** ./hooks/usePresaleProgram.ts ***!
  \************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   usePresaleProgram: function() { return /* binding */ usePresaleProgram; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @solana/wallet-adapter-react */ \"./node_modules/@solana/wallet-adapter-react/lib/esm/index.js\");\n/* harmony import */ var _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @solana/web3.js */ \"./node_modules/@solana/web3.js/lib/index.browser.esm.js\");\n/* harmony import */ var _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @coral-xyz/anchor */ \"./node_modules/@coral-xyz/anchor/dist/browser/index.js\");\n/* provided dependency */ var Buffer = __webpack_require__(/*! buffer */ \"./node_modules/buffer/index.js\")[\"Buffer\"];\n\n\n\n\n// Program ID from the IDL\nconst programId = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"F8F9Ny7p3jXkZctSmzZFfDnpdhrqnCW4tQnbqVYWHcbv\");\nconst plasmaMint = new _solana_web3_js__WEBPACK_IMPORTED_MODULE_1__.PublicKey(\"ARTBJwHjYbxDFY9i2qLaGddmTgWDzXh4hkfuEWisFipZ\");\n// Seeds for PDAs\nconst VAULT_SEED = Buffer.from(\"vault\");\nconst USER_INFO_SEED = Buffer.from(\"user_info\");\n// Use a simpler approach without requiring all Anchor deserialization\nconst usePresaleProgram = ()=>{\n    const { connection } = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__.useConnection)();\n    const wallet = (0,_solana_wallet_adapter_react__WEBPACK_IMPORTED_MODULE_3__.useWallet)();\n    const { publicKey, sendTransaction } = wallet;\n    const [presaleAccount, setPresaleAccount] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [userInfo, setUserInfo] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    // We're going to use a simplified approach due to IDL serialization issues\n    const fetchPresaleData = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!publicKey) return;\n        try {\n            setIsLoading(true);\n            // For now, create a dummy presale account to show the UI\n            // In a production app, you would properly query the on-chain account\n            setPresaleAccount({\n                authority: publicKey,\n                plasmaMint: plasmaMint,\n                treasury: publicKey,\n                pricePerToken: new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(1000000),\n                totalAllocation: new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(1000000),\n                tokensSold: new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(250000),\n                isActive: true,\n                publicKey: programId // Using programId as dummy address\n            });\n        } catch (error) {\n            console.error(\"Error fetching presale data:\", error);\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        publicKey\n    ]);\n    const fetchUserInfo = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!publicKey) return;\n        try {\n            setIsLoading(true);\n            // For now, create a dummy user info to show the UI\n            // In a production app, you would properly query the on-chain account\n            // Use current time + 1 day to simulate a lock period\n            const unlockTime = Math.floor(Date.now() / 1000) + 86400;\n            setUserInfo({\n                buyer: publicKey,\n                amount: new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(10000),\n                unlockTime: unlockTime,\n                claimed: false,\n                bump: 254\n            });\n        } catch (error) {\n            console.error(\"Error fetching user info:\", error);\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        publicKey\n    ]);\n    const initializePresale = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (pricePerToken, totalAllocation, treasury)=>{\n        if (!publicKey) return;\n        alert(\"In a production environment, this would create a new presale contract on-chain\");\n        try {\n            setIsLoading(true);\n            // In demo mode, just update our state\n            setPresaleAccount({\n                authority: publicKey,\n                plasmaMint: plasmaMint,\n                treasury: treasury,\n                pricePerToken: new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(pricePerToken),\n                totalAllocation: new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(totalAllocation),\n                tokensSold: new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(0),\n                isActive: true,\n                publicKey: programId // Using programId as dummy address\n            });\n        } catch (error) {\n            console.error(\"Error initializing presale:\", error);\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        publicKey\n    ]);\n    const buyTokens = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (amount)=>{\n        if (!publicKey || !presaleAccount) return;\n        alert(\"In a production environment, this would purchase \".concat(amount, \" tokens on-chain\"));\n        try {\n            setIsLoading(true);\n            // Update our presale account state\n            const newTokensSold = presaleAccount.tokensSold.add(new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(amount));\n            setPresaleAccount({\n                ...presaleAccount,\n                tokensSold: newTokensSold\n            });\n            // Update user info\n            const unlockTime = Math.floor(Date.now() / 1000) + 86400; // 1 day lock\n            const newAmount = userInfo ? userInfo.amount.add(new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(amount)) : new _coral_xyz_anchor__WEBPACK_IMPORTED_MODULE_2__.BN(amount);\n            setUserInfo({\n                buyer: publicKey,\n                amount: newAmount,\n                unlockTime: unlockTime,\n                claimed: false,\n                bump: 254\n            });\n        } catch (error) {\n            console.error(\"Error buying tokens:\", error);\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        publicKey,\n        presaleAccount,\n        userInfo\n    ]);\n    const claimTokens = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async ()=>{\n        if (!publicKey || !userInfo) return;\n        alert(\"In a production environment, this would claim your tokens from the contract\");\n        try {\n            setIsLoading(true);\n            // Update user info to mark as claimed\n            setUserInfo({\n                ...userInfo,\n                claimed: true\n            });\n        } catch (error) {\n            console.error(\"Error claiming tokens:\", error);\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        publicKey,\n        userInfo\n    ]);\n    const togglePresale = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(async (active)=>{\n        if (!publicKey || !presaleAccount) return;\n        alert(\"In a production environment, this would \".concat(active ? \"activate\" : \"deactivate\", \" the presale\"));\n        try {\n            setIsLoading(true);\n            // Update presale state\n            setPresaleAccount({\n                ...presaleAccount,\n                isActive: active\n            });\n        } catch (error) {\n            console.error(\"Error toggling presale:\", error);\n        } finally{\n            setIsLoading(false);\n        }\n    }, [\n        publicKey,\n        presaleAccount\n    ]);\n    return {\n        presaleAccount,\n        userInfo,\n        isLoading,\n        fetchPresaleData,\n        fetchUserInfo,\n        initializePresale,\n        buyTokens,\n        claimTokens,\n        togglePresale\n    };\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./hooks/usePresaleProgram.ts\n"));

/***/ })

});